AWSTemplateFormatVersion: "2010-09-09"
Description: AWS Lambda - This Lambda finds negative invoices and converts them to be a credit on the user's account so that the amount is discounted off their next positive bill
Parameters:
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - PROD
      - CODE
      - DEV
    Default: CODE
  WaitTimeForZuora:
    Description: How long the step function should wait (in seconds) for Zuora to generate its Export
    Type: Number
    Default: 500
  AlarmEmail:
    Description: AlarmEmail
    Type: String
    Default: fulfilment.dev@guardian.co.uk

Resources:
  CreditBalanceAdjustmentSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub 'zuora-credit-balance-adjustment-alarms-${Stage}'
      Subscription:
        -
          Endpoint:
            Ref: AlarmEmail
          Protocol: email
      TopicName: !Sub 'zuora-credit-balance-adjustment-alarms-${Stage}'
  ZuoraCreditorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub zuora-creditor-${Stage}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
               - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - lambda:InvokeFunction
              - Effect: Allow
                Action:
                  - ssm:GetParametersByPath
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stage}/subscriptions/zuora-creditor
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ssm
              - Effect: Allow
                Action:
                  - SNS:Publish
                Resource: !Ref CreditBalanceAdjustmentSNSTopic

  ZuoraCreditorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub zuora-creditor-${Stage}
      Code:
        S3Bucket: subscriptions-dist
        S3Key: !Sub subscriptions/${Stage}/zuora-creditor/zuora-creditor.jar
      Description: This Lambda finds negative invoices and converts them to be a credit on the customer's account so that the amount is deducted off their next positive bill.
      Handler: com.gu.zuora.creditor.Lambda::handleRequest
      MemorySize: 512
      Role: !GetAtt ZuoraCreditorRole.Arn
      Runtime: java8.al2
      Timeout: 60
      Environment:
        Variables:
          App: zuora-creditor
          Stack: subscriptions
          Stage: !Ref Stage
          alarms_topic_arn: !Ref CreditBalanceAdjustmentSNSTopic

  ZuoraCreditorStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub zuora-creditor-step-function-role-${Stage}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
               - states.eu-west-1.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub zuora-creditor-step-function-policy-${Stage}
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - lambda:InvokeFunction

  ZuoraCreditorStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub zuora-creditor-step-function-${Stage}
      RoleArn: !GetAtt ZuoraCreditorStepFunctionRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "A state machine to orchestrate the zuora-creditor Lambda, holding state between invocations to allow a background job in Zuora to complete between those invocations.",
          "StartAt": "FirstState",
          "States": {
            "FirstState": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:zuora-creditor-${Stage}",
              "Next": "wait_using_seconds"
            },
            "wait_using_seconds": {
              "Type": "Wait",
              "Seconds": ${WaitTimeForZuora},
              "Next": "FinalState"
            },
            "FinalState": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:zuora-creditor-${Stage}",
              "End": true
            }
          }
        }

  RuleRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub zuora-creditor-step-function-rule-role-${Stage}
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                 - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: ZuoraCreditorStepFunctionRulePolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Resource: !Ref ZuoraCreditorStepFunction
                  Action:
                    - states:StartExecution

  ZuoraCreditorStepFunctionRule:
      Type: AWS::Events::Rule
      Properties:
        Name: !Sub zuora-creditor-step-function-rule-${Stage}
        Description: Starts the Zuora Holiday Suspension Step function
        ScheduleExpression: cron(5 9 * * ? *)
        Targets:
        - Id: ZuoraCreditorStepFunctionRule
          Arn: !Ref ZuoraCreditorStepFunction
          Input: '{"scheduleReport":"GetNegativeHolidaySuspensionInvoices"}'
          RoleArn: !GetAtt RuleRole.Arn